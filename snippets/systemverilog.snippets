# verilog auto template
snippet vatmp
	/* ${1:module_name} auto_template(
	); */
	${2:$1}
		u_${3:$1}(/*autoinst*/);
# Always block with clock
snippet alwc
	always @(posedge ${2:clk}, negedge ${1:rst_n}) begin
		if(!${3:$1})
	end
# Always_ff block with clock
snippet alwfc
	always_ff @(posedge ${2:clk}, negedge ${1:rst_n}) begin
		if(!${3:$1})
	end
# tb init
snippet tbinit
		localparam CLK_PER_H = 5; // 1/2 period

		initial begin
			clk = 1'b0; #1;
			forever clk = #CLK_PER_H ~clk;
		end

		initial begin
			rst_n = 1'b1; #1;
			rst_n = 1'b0; #${2:33};
			rst_n = 1'b1;
		end
# testbench module
snippet mod1
	module ${1:`expand('%:r')`}(
		/*autoinput*/

		/*autooutput*/
	);

		/*autologic*/

	endmodule
# testbench module
snippet tbmod
	module tb_${1:test_dut};
		/*autoreginput*/

		/*autologic*/

		localparam CLK_PER_H = 5; // 1/2 period

		initial begin
			clk = 1'b0; #1;
			forever clk = #CLK_PER_H ~clk;
		end

		initial begin
			rst_n = 1'b1; #1;
			rst_n = 1'b0; #${2:33};
			rst_n = 1'b1;
		end

		// DUT
		${3:$1}
			dut(/*autoinst*/);

	endmodule
# verilog auto local variables
snippet valv
	///////////////////////////////////////////////////////////////////////////
	// Local Variables:
	// verilog-library-flags:("-y ${1:..}")
	// verilog-auto-inst-param-value:t
	// verilog-auto-tieoff-declaration:"assign"
	// eval:(verilog-read-defines)
	// End:
	///////////////////////////////////////////////////////////////////////////
# verilog auto ingore regex
snippet vaig
	/*AUTO_LISP(setq verilog-auto-${1:output}-ignore-regexp
			(verilog-regexp-words `(
				"${2:ignore_signal}"
			)))
	*/

